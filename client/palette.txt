implementasi kodingan ini dengan perintah berikut:

--chamoisee: #977458ff;
--buff: #da985bff;
--seashell: #fef7f1ff;
--bone: #e4d9c7ff;
--platinum: #dde3dfff;
--light-blue: #92bcbeff;
#263E40

buat geminiai hanya menampilkan slogan tentang bencana alam. nanti slogan akan ditaruh di pojok atas login dan register. dan ditaruh juga di Homepage pengganti welcome to the blog dengan font besar dan palette warna yang sesuai
berikan step stepnya dari awal!

import { useEffect, useState } from "react";
import Card from "../component/Card";
import { useNavigate } from "react-router-dom";
import { axiosIns } from "../axios";

export default function Homepage() {
  const [posts, setPosts] = useState([]);
  const navigate = useNavigate();

  const getPost = async () => {
    try {
      const { data } = await axiosIns.get("/article");
      setPosts(data.data);
    } catch (error) {
      console.log(error);
    }
  };

  useEffect(() => {
    getPost();
  }, []);

  return (
    <div className="bg-seashell min-h-screen">
      <div className="container mx-auto py-10">
        <h1 className="text-4xl font-bold text-center text-chamoisee mb-10">
          Welcome to the Blog
        </h1>
        <div className="flex justify-center mb-10">
          <button
            onClick={() => navigate("/create-article")}
            className="bg-buff text-seashell py-2 px-4 rounded-lg shadow-md hover:bg-chamoisee transition-colors"
          >
            Create New Article
          </button>
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
          {posts.map((post) => (
            <Card key={post.id} post={post} />
          ))}
        </div>
      </div>
    </div>
  );
}


register
import { useState, useEffect } from "react";
import {useNavigate } from "react-router-dom";
import wave01 from "../assets/wave01.png";
import wave02 from "../assets/wave02.png";
import wave03 from "../assets/wave03.png";
import bigsun from "../assets/bigsun.png";
import { axiosIns } from "../axios";

export default function Register() {
  const [fullName, setFullName] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const navigate = useNavigate();

  // Handle regular registration
  const handleSubmit = async (event) => {
    event.preventDefault();
    try {
      const { data } = await axiosIns.post("/register", {
        userName: fullName,
        email,
        password,
      });
      console.log(data, "==========");

      navigate("/login");
    } catch (error) {
      console.log(error);
    }
  };

  // Handle Google sign-in
  const handleGoogleLogin = () => {
    window.google.accounts.id.prompt();
  };

  // Initialize Google Sign-In
  useEffect(() => {
    if (window.google) {
      window.google.accounts.id.initialize({
        client_id: import.meta.env.VITE_GOOGLE_CLIENT_ID,
        callback: (response) => {
          console.log(response.credential);
        },
      });
    }
  }, []);

  return (
    <body className="bg-gradient-to-b from-[#ecebe1] to-[#ffcd76] relative min-h-screen">
      <div className="absolute bottom-0 left-0 right-0">
        <img
          src={bigsun}
          alt="sun"
          className="absolute w-full bottom-0 shadow-lg"
        />
        <img
          src={wave03}
          alt="wave1"
          className="absolute w-full bottom-0 shadow-lg"
        />
        <img
          src={wave02}
          alt="wave2"
          className="absolute w-full bottom-0 shadow-lg"
        />
        <img
          src={wave01}
          alt="wave3"
          className="absolute w-full bottom-0 shadow-sm"
        />
      </div>

      <div className="flex flex-col items-center justify-center min-h-screen bg-beige-100">
        <div className="relative p-1 bg-gradient-to-t from-[#fef7f1ff] via-[#fef7f1ff] to-[#fef7f1ff] rounded-lg">
          <div className="rounded-md w-full max-w-md p-8 space-y-6 bg-[#92bcbeff]">
            <h2 className="text-3xl font-bold text-center text-brown-600 text-[#263E40]">
              Register
            </h2>
            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="mb-4">
                <label
                  htmlFor="fullName"
                  className="block text-sm font-medium text-brown-400"
                >
                  Full Name
                </label>
                <input
                  type="text"
                  id="fullName"
                  name="fullName"
                  value={fullName}
                  onChange={(event) => setFullName(event.target.value)}
                  required
                  className="w-full px-4 py-2 border border-brown-300 rounded-lg shadow-sm focus:outline-none focus:ring-brown-500 focus:border-brown-500 bg-beige-50"
                />
              </div>

              <div className="mb-4">
                <label
                  htmlFor="email"
                  className="block text-sm font-medium text-brown-400"
                >
                  Email Address
                </label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={email}
                  onChange={(event) => setEmail(event.target.value)}
                  required
                  className="w-full px-4 py-2 border border-brown-300 rounded-lg shadow-sm focus:outline-none focus:ring-brown-500 focus:border-brown-500 bg-beige-50"
                />
              </div>

              <div className="mb-4">
                <label
                  htmlFor="password"
                  className="block text-sm font-medium text-brown-400"
                >
                  Password
                </label>
                <input
                  type="password"
                  id="password"
                  name="password"
                  value={password}
                  onChange={(event) => setPassword(event.target.value)}
                  required
                  className="w-full px-4 py-2 border border-brown-300 rounded-lg shadow-sm focus:outline-none focus:ring-brown-500 focus:border-brown-500 bg-beige-50"
                />
              </div>

              <button
                type="submit"
                className="w-full bg-[#263e40] text-[#fef7f1ff] py-2 rounded-lg shadow-lg hover:bg-brown-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brown-500"
              >
                Register
              </button>
            </form>

            {/* Custom Google Sign-In Button */}
            <button
              type="button"
              onClick={handleGoogleLogin}
              className="w-full bg-[#dde3dfff] text-[#263E40] py-2 rounded-lg shadow-lg hover:bg-brown-600 flex items-center justify-center"
            >
              <img
                src="https://cdn1.iconfinder.com/data/icons/google-s-logo/150/Google_Icons-09-512.png"
                alt="Google Logo"
                className="w-5 h-5 mr-2"
              />
              Register with Google
            </button>

            <p className="text-sm font-light text-brown-400">
              Have an account?{" "}
              <a
                href="/login"
                className="font-medium text-[977458ff] hover:text-[#ffffff]"
              >
                Login
              </a>
            </p>
          </div>
        </div>
      </div>
    </body>
  );
}


login
import { useEffect } from "react";
import wave01 from "../assets/wave01.png";
import wave02 from "../assets/wave02.png";
import wave03 from "../assets/wave03.png";
import bigsun from "../assets/bigsun.png";
import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { axiosIns } from "../axios";

export default function Login() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const navigate = useNavigate();

  const handleSubmit = async (event) => {
    event.preventDefault();
    try {
      const { data } = await axiosIns.post("/login", {
        email,
        password,
      });

      localStorage.setItem("access_token", data.access_token);
      navigate("/");
    } catch (error) {
      console.log(error);
    }
  };

  useEffect(() => {
    google.accounts.id.initialize({
      // fill this with your own client ID
      client_id: import.meta.env.VITE_GOOGLE_CLIENT_ID,
      // callback function to handle the response
      callback: async (response) => {
        console.log("Encoded JWT ID token: " + response.credential);
        const { data } = await axiosIns.post("/auth/google", {
          googleToken: response.credential,
        });

        localStorage.setItem("access_token", data.access_token);

        // navigate to the home page or do magic stuff
        navigate('/');
      },
    });
    google.accounts.id.renderButton(
      // HTML element ID where the button will be rendered
      // this should be existed in the DOM
      document.getElementById("buttonDiv"),
      // customization attributes
      { theme: "outline", size: "large" }
    );
    // to display the One Tap dialog, or comment to remove the dialog
    google.accounts.id.prompt();
  }, []);

  return (
    <body className="bg-gradient-to-b from-[#ecebe1] to-[#ffcd76] relative min-h-screen">
      <div className="absolute bottom-0 left-0 right-0">
        <img
          src={bigsun}
          alt="sun"
          className="absolute w-full bottom-0 shadow-lg"
        />
        <img
          src={wave03}
          alt="wave1"
          className="absolute w-full bottom-0 shadow-lg"
        />
        <img
          src={wave02}
          alt="wave2"
          className="absolute w-full bottom-0 shadow-lg"
        />
        <img
          src={wave01}
          alt="wave3"
          className="absolute w-full bottom-0 shadow-sm"
        />
      </div>
      <div className="flex flex-col items-center justify-center min-h-screen bg-beige-100">
        <div className="relative p-1 bg-gradient-to-t from-[#fef7f1ff] via-[#fef7f1ff] to-[#fef7f1ff] rounded-lg">
          <div className="rounded-md w-full max-w-md p-8 space-y-6 bg-[#92bcbeff]">
            <h2 className="text-3xl font-bold text-center text-brown-600 text-[#263E40]">
              Login
            </h2>
            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="mb-4">
                <label
                  htmlFor="email"
                  className="block text-sm font-medium text-brown-400"
                >
                  Email Address
                </label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={email}
                  onChange={(event) => setEmail(event.target.value)}
                  required
                  className="w-full px-4 py-2 border border-brown-300 rounded-lg shadow-sm focus:outline-none focus:ring-brown-500 focus:border-brown-500 bg-beige-50"
                />
              </div>

              <div className="mb-4">
                <label
                  htmlFor="password"
                  className="block text-sm font-medium text-brown-400"
                >
                  Password
                </label>
                <input
                  type="password"
                  id="password"
                  name="password"
                  value={password}
                  onChange={(event) => setPassword(event.target.value)}
                  required
                  className="w-full px-4 py-2 border border-brown-300 rounded-lg shadow-sm focus:outline-none focus:ring-brown-500 focus:border-brown-500 bg-beige-50"
                />
              </div>

              <div className="flex items-center justify-between">
                <div className="flex items-center">
                  <input
                    id="remember-me"
                    name="remember-me"
                    type="checkbox"
                    className="h-4 w-4 text-blue-400 focus:ring-blue-500 border-gray-300 rounded"
                  />
                  <label
                    htmlFor="remember-me"
                    className="ml-2 block text-sm text-brown-400"
                  >
                    Remember me
                  </label>
                </div>
              </div>

              <button
                type="submit"
                className="w-full bg-[#263e40] text-[#fef7f1ff] py-2 rounded-lg shadow-lg hover:bg-brown-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brown-500"
              >
                Sign in
              </button>

              {/* Custom Google Sign-In Button */}
              <button
                type="button"
                id="buttonDiv"
                className="w-full bg-[#dde3dfff] text-[#263E40] py-2 rounded-lg shadow-lg hover:bg-brown-600 flex items-center justify-center"
              >
                <img
                  src="https://cdn1.iconfinder.com/data/icons/google-s-logo/150/Google_Icons-09-512.png"
                  alt="Google Logo"
                  className="w-5 h-5 mr-2"
                />
                Sign in with Google
              </button>

              <p className="text-sm font-light text-brown-400">
                No Account?{" "}
                <a
                  href="/register"
                  className="font-medium text-[977458ff] hover:text-[#ffffff]"
                >
                  Register here
                </a>
              </p>
            </form>
          </div>
        </div>
      </div>
    </body>
  );
}
